// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

model User {
  id             Int            @id @default(autoincrement())
  name           String
  email          String         @unique
  password       String
  role           Role          @default(USER)
  tasksCreated   Task[]        @relation("CreatedTasks")
  tasksAssigned  Task[]        @relation("AssignedTasks")
  notifications  Notification[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Task {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  dueDate      DateTime
  priority     Priority
  status       Status
  createdBy    User          @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById  Int
  assignedTo   User          @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId Int
  notifications Notification[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  taskId    Int
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  task      Task     @relation(fields: [taskId], references: [id])

  @@index([userId])
  @@index([taskId])
}
